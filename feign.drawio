<mxfile host="app.diagrams.net" modified="2021-03-04T11:32:03.511Z" agent="5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36" etag="iSeWYLgKjh9COKu7SZ-P" version="14.4.3" type="github">
  <diagram id="LuQ_MH0cPUaEYpk4wpXu" name="第 1 页">
    <mxGraphModel dx="1181" dy="759" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="f0mKS1ikmovLvOTV63AS-19" value="&lt;span class=&quot;hljs-function&quot; style=&quot;margin: 0px ; padding: 0px ; font-family: &amp;#34;courier new&amp;#34; , sans-serif&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;margin: 0px ; padding: 0px ; color: rgb(0 , 0 , 255)&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;margin: 0px ; padding: 0px ; color: rgb(0 , 0 , 255)&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;margin: 0px ; padding: 0px ; color: rgb(163 , 21 , 21)&quot;&gt;registerBeanDefinitions&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot; style=&quot;margin: 0px ; padding: 0px&quot;&gt;AnnotationMetadata metadata,BeanDefinitionRegistry registry&lt;/span&gt;)&lt;/span&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; , sans-serif ; background-color: rgb(245 , 245 , 245)&quot;&gt;{registerDefaultConfiguration(metadata, registry);&lt;br&gt;registerFeignClients(metadata, registry);&lt;br&gt;}&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="362.5" y="670" width="695" height="90" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-27" value="&lt;span class=&quot;hljs-keyword&quot; style=&quot;margin: 0px ; padding: 0px ; color: rgb(0 , 0 , 255) ; font-family: &amp;#34;courier new&amp;#34; , sans-serif ; background-color: rgb(245 , 245 , 245)&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; , sans-serif ; background-color: rgb(245 , 245 , 245)&quot;&gt; &lt;/span&gt;&lt;span class=&quot;hljs-title&quot; style=&quot;margin: 0px ; padding: 0px ; color: rgb(163 , 21 , 21) ; font-family: &amp;#34;courier new&amp;#34; , sans-serif ; background-color: rgb(245 , 245 , 245)&quot;&gt;FeignClientFactoryBean&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;margin: 0px ; padding: 0px ; color: rgb(0 , 0 , 255) ; font-family: &amp;#34;courier new&amp;#34; , sans-serif ; background-color: rgb(245 , 245 , 245)&quot;&gt;implements&lt;/span&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; , sans-serif ; background-color: rgb(245 , 245 , 245)&quot;&gt; &lt;/span&gt;&lt;span class=&quot;hljs-title&quot; style=&quot;margin: 0px ; padding: 0px ; color: rgb(163 , 21 , 21) ; font-family: &amp;#34;courier new&amp;#34; , sans-serif ; background-color: rgb(245 , 245 , 245)&quot;&gt;FactoryBean&lt;/span&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; , sans-serif ; background-color: rgb(245 , 245 , 245)&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;hljs-title&quot; style=&quot;margin: 0px ; padding: 0px ; color: rgb(163 , 21 , 21) ; font-family: &amp;#34;courier new&amp;#34; , sans-serif ; background-color: rgb(245 , 245 , 245)&quot;&gt;Object&lt;/span&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; , sans-serif ; background-color: rgb(245 , 245 , 245)&quot;&gt;&amp;gt;, &lt;/span&gt;&lt;span class=&quot;hljs-title&quot; style=&quot;margin: 0px ; padding: 0px ; color: rgb(163 , 21 , 21) ; font-family: &amp;#34;courier new&amp;#34; , sans-serif ; background-color: rgb(245 , 245 , 245)&quot;&gt;InitializingBean&lt;/span&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; , sans-serif ; background-color: rgb(245 , 245 , 245)&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;hljs-title&quot; style=&quot;margin: 0px ; padding: 0px ; color: rgb(163 , 21 , 21) ; font-family: &amp;#34;courier new&amp;#34; , sans-serif ; background-color: rgb(245 , 245 , 245)&quot;&gt;ApplicationContextAware&lt;br&gt;&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;重写了getObject（）方法&lt;br&gt;&lt;/span&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;margin: 0px ; padding: 0px ; color: rgb(0 , 0 , 0) ; font-family: &amp;#34;courier new&amp;#34; , sans-serif&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;margin: 0px ; padding: 0px ; color: rgb(0 , 0 , 255)&quot;&gt;public&lt;/span&gt; Object &lt;span class=&quot;hljs-title&quot; style=&quot;margin: 0px ; padding: 0px ; color: rgb(163 , 21 , 21)&quot;&gt;getObject&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot; style=&quot;margin: 0px ; padding: 0px&quot;&gt;&lt;/span&gt;) throws Exception&lt;/span&gt;&lt;span style=&quot;color: rgb(0 , 0 , 0) ; font-family: &amp;#34;courier new&amp;#34; , sans-serif&quot;&gt; {&lt;br&gt;		&lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;margin: 0px ; padding: 0px ; color: rgb(0 , 0 , 255) ; font-family: &amp;#34;courier new&amp;#34; , sans-serif&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: rgb(0 , 0 , 0) ; font-family: &amp;#34;courier new&amp;#34; , sans-serif&quot;&gt; getTarget();&lt;br&gt;	}&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;追踪&lt;/span&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; , sans-serif&quot;&gt;getObject()方法，&lt;/span&gt;&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;最终的bean是通过target.target()方法生成，。。。&lt;br&gt;最后，&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;可以看到Proxy.newProxyInstance这个熟悉得身影了，没错他就是&lt;/span&gt;&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;基于JDK原生的动态代理生成了FeignClientFactoryBean.type属性对应得class对应得代理类。&lt;br&gt;从前文我们知道FeignClientFactoryBean.type就是feign接口得class对象。所以最终我们调用feign接口得方法实际上调用得是InvocationHandler方法&lt;/span&gt;&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;br&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="513" y="1380" width="544" height="250" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-49" value="" style="group" vertex="1" connectable="0" parent="1">
          <mxGeometry x="20" y="20" width="1001.5" height="2930" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-1" value="&lt;div&gt;&lt;b&gt;微服务通信&lt;/b&gt;&lt;/div&gt;&lt;b&gt;&lt;div&gt;&lt;b&gt;feign的注册、发现过程&lt;/b&gt;&lt;/div&gt;&lt;/b&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="f0mKS1ikmovLvOTV63AS-49">
          <mxGeometry width="220" height="40" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-2" value="&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; text-align: left ; background-color: rgb(255 , 255 , 255)&quot;&gt;定义一个接口并用FeignClient注解说明接口所在服务和路径&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="f0mKS1ikmovLvOTV63AS-49">
          <mxGeometry x="410" y="20" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-3" value="&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; text-align: left ; background-color: rgb(255 , 255 , 255)&quot;&gt;服务启动类上添加@EnableFeignClients&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="f0mKS1ikmovLvOTV63AS-49">
          <mxGeometry x="410" y="160" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-9" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="f0mKS1ikmovLvOTV63AS-49" source="f0mKS1ikmovLvOTV63AS-6" target="f0mKS1ikmovLvOTV63AS-2">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-10" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.75;entryDx=0;entryDy=0;" edge="1" parent="f0mKS1ikmovLvOTV63AS-49" source="f0mKS1ikmovLvOTV63AS-6" target="f0mKS1ikmovLvOTV63AS-3">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-6" value="&lt;span&gt;微服务通信&lt;/span&gt;&lt;br&gt;&lt;span&gt;feign的注册、发现过程&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="f0mKS1ikmovLvOTV63AS-49">
          <mxGeometry x="200" y="80" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-12" value="feign接口是如何被实例化到spring容器的" style="rounded=1;whiteSpace=wrap;html=1;fontColor=#FF0000;" vertex="1" parent="f0mKS1ikmovLvOTV63AS-49">
          <mxGeometry x="630" y="40" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-13" value="&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;注解本身主要定义了要扫描的feign接口包路径以及配置，但是注解本身又有注解Import ,可以看到他引入了&lt;/span&gt;&lt;strong style=&quot;margin: 0px ; padding: 0px ; color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;FeignClientsRegistrar&lt;/strong&gt;&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;到容器&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="f0mKS1ikmovLvOTV63AS-49">
          <mxGeometry x="600" y="150" width="180" height="80" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-14" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="f0mKS1ikmovLvOTV63AS-49" source="f0mKS1ikmovLvOTV63AS-3" target="f0mKS1ikmovLvOTV63AS-13">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-32" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="f0mKS1ikmovLvOTV63AS-49" source="f0mKS1ikmovLvOTV63AS-12" target="f0mKS1ikmovLvOTV63AS-13">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-15" value="&lt;span class=&quot;hljs-class&quot; style=&quot;margin: 0px ; padding: 0px ; font-family: &amp;#34;courier new&amp;#34; , sans-serif&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;margin: 0px ; padding: 0px ; color: rgb(0 , 0 , 255)&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;margin: 0px ; padding: 0px ; color: rgb(163 , 21 , 21)&quot;&gt;FeignClientsRegistrar&lt;/span&gt;&lt;br&gt;		&lt;span class=&quot;hljs-keyword&quot; style=&quot;margin: 0px ; padding: 0px ; color: rgb(0 , 0 , 255)&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;margin: 0px ; padding: 0px ; color: rgb(163 , 21 , 21)&quot;&gt;ImportBeanDefinitionRegistrar&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot; style=&quot;margin: 0px ; padding: 0px ; color: rgb(163 , 21 , 21)&quot;&gt;ResourceLoaderAware&lt;/span&gt;, &lt;span class=&quot;hljs-title&quot; style=&quot;margin: 0px ; padding: 0px ; color: rgb(163 , 21 , 21)&quot;&gt;EnvironmentAware {}&lt;/span&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="f0mKS1ikmovLvOTV63AS-49">
          <mxGeometry x="515" y="300" width="350" height="100" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-16" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="f0mKS1ikmovLvOTV63AS-49" source="f0mKS1ikmovLvOTV63AS-13" target="f0mKS1ikmovLvOTV63AS-15">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-17" value="&lt;span style=&quot;color: rgb(163 , 21 , 21) ; font-family: &amp;#34;courier new&amp;#34; , sans-serif&quot;&gt;FeignClientsRegistrar重写了&lt;/span&gt;&lt;span style=&quot;color: rgb(163 , 21 , 21) ; font-family: &amp;#34;courier new&amp;#34; , sans-serif&quot;&gt;ImportBeanDefinitionRegistrar的&lt;/span&gt;&lt;span style=&quot;color: rgb(163 , 21 , 21) ; font-family: &amp;#34;courier new&amp;#34; , sans-serif ; background-color: rgb(245 , 245 , 245)&quot;&gt;registerBeanDefinitions方法，启动的时候会调用&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="f0mKS1ikmovLvOTV63AS-49">
          <mxGeometry x="575" y="475" width="230" height="90" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-18" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="f0mKS1ikmovLvOTV63AS-49" source="f0mKS1ikmovLvOTV63AS-15" target="f0mKS1ikmovLvOTV63AS-17">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-21" value="&lt;span style=&quot;color: rgb(163 , 21 , 21) ; font-family: &amp;#34;courier new&amp;#34; , sans-serif ; background-color: rgb(245 , 245 , 245)&quot;&gt;registerFeignClients&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;先找了包路径basePackages , 然后在从这些包路径中查找带有FeignClient注解的接口，最后将注解的信息解析出来作为属性手动构建beanDefine注入到容器中（下边）&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(245 , 245 , 245)&quot;&gt;&lt;font color=&quot;#a31515&quot; face=&quot;courier new, sans-serif&quot;&gt;使用的是同名函数不同参数registerFeignClient(registry, annotationMetadata, attributes);&lt;br&gt;&lt;/font&gt;下边分析上边这个函数&lt;br&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="f0mKS1ikmovLvOTV63AS-49">
          <mxGeometry x="580" y="820" width="370" height="160" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-23" value="&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; , sans-serif ; background-color: rgb(245 , 245 , 245)&quot;&gt;BeanDefinitionBuilder definition = BeanDefinitionBuilder&lt;br/&gt;				.genericBeanDefinition(FeignClientFactoryBean.&lt;/span&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;margin: 0px ; padding: 0px ; color: rgb(0 , 0 , 255) ; font-family: &amp;#34;courier new&amp;#34; , sans-serif&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;font-family: &amp;#34;courier new&amp;#34; , sans-serif ; background-color: rgb(245 , 245 , 245)&quot;&gt;);&lt;/span&gt;&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;&lt;br&gt;代码中通过BeanDefinitionBuilder.genericBeanDefinition（FeignClientFactoryBean.class）生成的BeanDefine&lt;/span&gt;&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;（&lt;/span&gt;&lt;strong style=&quot;margin: 0px ; padding: 0px ; color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;请记住这里设置得FeignClientFactoryBean.type就是feign接口对应得class对象&lt;/strong&gt;&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;）&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="f0mKS1ikmovLvOTV63AS-49">
          <mxGeometry x="565" y="1040" width="400" height="130" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-24" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="f0mKS1ikmovLvOTV63AS-49" source="f0mKS1ikmovLvOTV63AS-21" target="f0mKS1ikmovLvOTV63AS-23">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-25" value="&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;由上文知，&lt;/span&gt;&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;每一个feign接口实际上最终都会生成FeignClientFactoryBean ，最终由FeignClientFactoryBean生成具体的bean实例注册到容器中&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="f0mKS1ikmovLvOTV63AS-49">
          <mxGeometry x="603" y="1230" width="325" height="90" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-26" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="f0mKS1ikmovLvOTV63AS-49" source="f0mKS1ikmovLvOTV63AS-23" target="f0mKS1ikmovLvOTV63AS-25">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-29" value="&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;总结起来，先通过@enableFeignClient上面的@import扫描feign接口，然后利用BeanDefinitionBuilder创建一个FeignClientFactoryBean，最后在FeignClientFactoryBean的getObject()方法中生成代理类&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="f0mKS1ikmovLvOTV63AS-49">
          <mxGeometry x="610.5" y="1679" width="310" height="110" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-33" value="&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;上文知道feign接口调用实质上是调用的对应的动态代理接口的InvocationHandler，跟踪源码发现默认的InvocationHandler实现就是FeignInvocationHandler&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="f0mKS1ikmovLvOTV63AS-49">
          <mxGeometry x="638.5" y="1920" width="254" height="90" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-34" value="" style="endArrow=classic;html=1;" edge="1" parent="f0mKS1ikmovLvOTV63AS-49">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="765.5" y="1789" as="sourcePoint" />
            <mxPoint x="765.5" y="1919" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-35" value="&lt;b&gt;上边是&lt;span style=&quot;font-size: 12px ; background-color: rgb(248 , 249 , 250)&quot;&gt;feign接口是如何被实例化到spring容器的&lt;/span&gt;&lt;br&gt;下边是集成负载均衡&lt;/b&gt;" style="edgeLabel;resizable=0;html=1;align=center;verticalAlign=middle;fontColor=#FF0000;" connectable="0" vertex="1" parent="f0mKS1ikmovLvOTV63AS-34">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-36" value="参考&lt;br&gt;&lt;a href=&quot;https://www.cnblogs.com/enjoyall/p/13755252.html&quot;&gt;https://www.cnblogs.com/enjoyall/p/13755252.html&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.cnblogs.com/enjoyall/p/13804342.html&quot;&gt;https://www.cnblogs.com/enjoyall/p/13804342.html&lt;/a&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="f0mKS1ikmovLvOTV63AS-49">
          <mxGeometry x="10" y="270" width="280" height="80" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-37" value="&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;FeignInvocationHandler.invoke(...)方法&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;直接从缓存中拿到对应的MethodHandler,然后调用的MethodHandler的invoke方法&lt;/span&gt;&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;&lt;br&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontColor=#FF0000;align=left;" vertex="1" parent="f0mKS1ikmovLvOTV63AS-49">
          <mxGeometry x="643" y="2080" width="245" height="50" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-38" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontColor=#FF0000;" edge="1" parent="f0mKS1ikmovLvOTV63AS-49" source="f0mKS1ikmovLvOTV63AS-33" target="f0mKS1ikmovLvOTV63AS-37">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-39" value="&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;在invoke函数中通过方法名称找到对应的SynchronousMethodHandler&lt;/span&gt;&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;&lt;br&gt;MethodHandler的实现有两个&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;1. DefaultMethodHandler处理的是feign接口中的Default修饰的方法&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;2. 我们调用的远程接口用的是SynchronousMethodHandler实现&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;跟踪代码发现，最终调用的是SynchronousMethodHandler持有的Client的实例的execute方法&lt;/span&gt;&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontColor=#FF0000;align=left;" vertex="1" parent="f0mKS1ikmovLvOTV63AS-49">
          <mxGeometry x="557.5" y="2190" width="415" height="90" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-40" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontColor=#FF0000;" edge="1" parent="f0mKS1ikmovLvOTV63AS-49" source="f0mKS1ikmovLvOTV63AS-37" target="f0mKS1ikmovLvOTV63AS-39">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-41" value="&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;跟踪SynchronousMethodHandler的创建过程发现Client的创建是按照如下逻辑进行的&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;就是看FeignClientFactoryBean.loadBalance方法&lt;/span&gt;&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;&lt;br&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontColor=#FF0000;align=left;" vertex="1" parent="f0mKS1ikmovLvOTV63AS-49">
          <mxGeometry x="643" y="2350" width="277" height="110" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-42" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontColor=#FF0000;" edge="1" parent="f0mKS1ikmovLvOTV63AS-49" source="f0mKS1ikmovLvOTV63AS-39" target="f0mKS1ikmovLvOTV63AS-41">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-43" value="&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;所以我们调用feign接口的某一个方法，最终调用的LoadBalancerFeignClient.execute()方法。那么负载均衡相关逻辑应该是在此接入的&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontColor=#FF0000;align=left;" vertex="1" parent="f0mKS1ikmovLvOTV63AS-49">
          <mxGeometry x="657.5" y="2500" width="248" height="70" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-44" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontColor=#FF0000;" edge="1" parent="f0mKS1ikmovLvOTV63AS-49" source="f0mKS1ikmovLvOTV63AS-41" target="f0mKS1ikmovLvOTV63AS-43">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-45" value="&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;LoadBalancerFeignClient做了什么&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;lbClient(clientName) 创建了一个负载均衡的客户端，实际上生成了继承Ribbon负载均衡调用的父类&lt;/span&gt;&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;&lt;br&gt;&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontColor=#FF0000;align=left;" vertex="1" parent="f0mKS1ikmovLvOTV63AS-49">
          <mxGeometry x="597" y="2630" width="368" height="90" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-46" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontColor=#FF0000;" edge="1" parent="f0mKS1ikmovLvOTV63AS-49" source="f0mKS1ikmovLvOTV63AS-43" target="f0mKS1ikmovLvOTV63AS-45">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-47" value="&lt;span style=&quot;color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;代理对象、请求与响应解析、执行器三个职能部门&lt;br&gt;&lt;/span&gt;&lt;ul style=&quot;margin: 0px 0px 0px 30px ; padding: 0px ; word-break: break-all ; color: rgb(68 , 68 , 68) ; font-family: &amp;#34;pingfang sc&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; background-color: rgb(255 , 255 , 255)&quot;&gt;&lt;li style=&quot;margin: 0px 0px 1em ; padding: 0px ; list-style: disc&quot;&gt;代理对象职责是： 将feign接口中方法的调用转接到对FeignInvocationHandler的invoke调用，在invoke函数中通过方法名称找到对应的SynchronousMethodHandler。&lt;/li&gt;&lt;li style=&quot;margin: 0px 0px 1em ; padding: 0px ; list-style: disc&quot;&gt;执行器： 负责根据请求的方法解析出调用信息（调用服务名、调用地址、调用参数）然后发起调用，他不关心参数是如何来的&lt;/li&gt;&lt;/ul&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontColor=#FF0000;align=left;" vertex="1" parent="f0mKS1ikmovLvOTV63AS-49">
          <mxGeometry x="561.5" y="2820" width="440" height="110" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-48" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontColor=#FF0000;" edge="1" parent="f0mKS1ikmovLvOTV63AS-49" source="f0mKS1ikmovLvOTV63AS-45" target="f0mKS1ikmovLvOTV63AS-47">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-20" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="f0mKS1ikmovLvOTV63AS-17" target="f0mKS1ikmovLvOTV63AS-19">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-22" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="f0mKS1ikmovLvOTV63AS-19" target="f0mKS1ikmovLvOTV63AS-21">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-28" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="f0mKS1ikmovLvOTV63AS-25" target="f0mKS1ikmovLvOTV63AS-27">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="f0mKS1ikmovLvOTV63AS-30" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="f0mKS1ikmovLvOTV63AS-27" target="f0mKS1ikmovLvOTV63AS-29">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
